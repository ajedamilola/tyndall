generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:drowssap@localhost:5432/tyndal?schema=public"
}

model User {
  superTokenId         String             @id
  name                 String             @default("")
  email                String
  provider             CredentialProvider
  preferences          String[]           @default([])
  level                Level              @default(beginner)
  is_admin             Boolean            @default(false)
  completed_onboarding Boolean            @default(false)
  created_at           DateTime           @default(now())
  updated_at           DateTime           @default(now()) @updatedAt
  articles             Article[]
  feedbacks            Feedback[]
  readArticles         ReadArticle[]
}

model ReadArticle {
  id               BigInt  @id @default(autoincrement())
  userSuperTokenId String
  articleId        BigInt
  article          Article @relation(fields: [articleId], references: [id])
  user             User    @relation(fields: [userSuperTokenId], references: [superTokenId])
}

model Feedback {
  id               BigInt   @id @default(autoincrement())
  userSuperTokenId String
  content          String?
  positive         Boolean  @default(true)
  articleId        BigInt?
  articles         Article? @relation(fields: [articleId], references: [id])
  user             User     @relation(fields: [userSuperTokenId], references: [superTokenId])
}

model Article {
  id           BigInt        @id @default(autoincrement())
  title        String
  summary      String
  references   Json          @default("[]")
  category     String        @default("general")
  fields       String[]      @default([])
  content      String
  ai           Boolean       @default(true)
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now()) @updatedAt
  userId       String?
  author       User?         @relation(fields: [userId], references: [superTokenId])
  likes     Int      @default(0)
  reports      Feedback[]
  readArticles ReadArticle[]
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    String
  articleId Int
  user     User     @relation(fields: [userId], references: [id])
  article  Article  @relation(fields: [articleId], references: [id])
}


enum CredentialProvider {
  email
  google
  github
  facebook
}

enum Level {
  beginner
  intermediary
  advanced
}
